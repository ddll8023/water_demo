<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.PositionMapper">

    <!-- 结果映射：岗位实体 -->
    <resultMap id="PositionMap" type="com.example.demo.pojo.entity.system.Position">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="responsibilities" column="responsibilities"/>
        <result property="level" column="level"/>
        <result property="personnelCount" column="personnel_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
    </resultMap>

    <!-- 新增岗位 -->
    <insert id="insert" parameterType="com.example.demo.pojo.entity.system.Position" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO positions (
            name, description, responsibilities, level, 
            created_at, updated_at, deleted_at
        ) VALUES (
            #{name}, #{description}, #{responsibilities}, #{level}, 
            #{createdAt}, #{updatedAt}, #{deletedAt}
        )
    </insert>
    
    <!-- 更新岗位 -->
    <update id="updateById" parameterType="com.example.demo.pojo.entity.system.Position">
        UPDATE positions SET 
            name = #{name},
            description = #{description},
            responsibilities = #{responsibilities},
            level = #{level},
            updated_at = #{updatedAt},
            deleted_at = #{deletedAt}
        WHERE id = #{id}
    </update>
    
    <!-- 根据ID查询岗位 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="PositionMap">
        SELECT positions.*
        FROM positions
        WHERE positions.id = #{id} AND positions.deleted_at IS NULL
    </select>

    <!-- 分页查询岗位列表（包含人员统计） -->
    <select id="selectPositionPageWithPersonnelCount" resultMap="PositionMap">
        SELECT positions.*,
               COUNT(personnel.id) as personnel_count
        FROM positions
        LEFT JOIN personnel ON positions.id = personnel.position_id AND personnel.deleted_at IS NULL
        WHERE positions.deleted_at IS NULL
        <if test="keyword != null and keyword != ''">
            AND (positions.name LIKE CONCAT('%', #{keyword}, '%')
            OR positions.description LIKE CONCAT('%', #{keyword}, '%')
            OR positions.responsibilities LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        GROUP BY positions.id, positions.created_at
        ORDER BY positions.created_at DESC
    </select>

    <!-- 检查岗位名称是否已存在 -->
    <select id="countByName" resultType="int">
        SELECT COUNT(1) FROM positions WHERE name = #{name} AND deleted_at IS NULL
        <if test="excludeId != null">AND id != #{excludeId}</if>
    </select>

    <!-- 获取岗位下的人员列表 -->
    <select id="selectPersonnelByPositionId" resultType="java.lang.Object">
        SELECT personnel.id, personnel.full_name, personnel.phone, personnel.email, personnel.employee_no, personnel.status
        FROM personnel
        WHERE personnel.position_id = #{positionId} AND personnel.deleted_at IS NULL
        ORDER BY personnel.created_at DESC
    </select>

    <!-- 根据岗位ID查询岗位详情 -->
    <select id="selectPositionById" resultMap="PositionMap">
        SELECT positions.*
        FROM positions
        WHERE positions.id = #{positionId} AND positions.deleted_at IS NULL
    </select>

</mapper>
