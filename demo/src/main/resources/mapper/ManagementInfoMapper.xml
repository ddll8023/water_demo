<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ManagementInfoMapper">
    
    <!-- 部门结果映射 -->
    <resultMap id="DepartmentMap" type="com.example.demo.entity.system.Department">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="parentId" column="parent_id"/>
        <result property="duty" column="duty"/>
        <result property="contact" column="contact"/>
        <result property="regionId" column="region_id"/>
        <result property="isActive" column="is_active"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
        <!-- 关联信息字段 -->
        <result property="personnelCount" column="personnel_count"/>
        <result property="parentName" column="parent_name"/>
        <result property="regionName" column="region_name"/>
    </resultMap>
    
    <!-- 人员结果映射 -->
    <resultMap id="PersonnelMap" type="com.example.demo.entity.system.Personnel">
        <id property="id" column="id"/>
        <result property="fullName" column="full_name"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="positionId" column="position_id"/>
        <result property="departmentId" column="department_id"/>
        <result property="userId" column="user_id"/>
        <result property="employeeNo" column="employee_no"/>
        <result property="hireDate" column="hire_date"/>
        <result property="workResponsibilities" column="work_responsibilities"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
        <!-- 关联信息字段 -->
        <result property="departmentName" column="department_name"/>
        <result property="positionName" column="position_name"/>
        <result property="username" column="username"/>
    </resultMap>

    <!-- 部门详情结果映射（包含关联信息） -->
    <resultMap id="DepartmentWithDetailsMap" type="com.example.demo.entity.system.Department" extends="DepartmentMap">
        <!-- 继承基础映射，可以添加额外字段 -->
    </resultMap>

    <!-- 获取部门树形结构 -->
    <select id="selectDepartmentTree" resultMap="DepartmentMap">
        SELECT departments.*,
               COUNT(personnel.id) as personnel_count,
               regions.name as region_name,
               parent_departments.name as parent_name
        FROM departments
        LEFT JOIN personnel ON departments.id = personnel.department_id AND personnel.deleted_at IS NULL
        LEFT JOIN regions ON departments.region_id = regions.id
        LEFT JOIN departments parent_departments ON departments.parent_id = parent_departments.id AND parent_departments.deleted_at IS NULL
        WHERE departments.deleted_at IS NULL
        GROUP BY departments.id, departments.name, departments.parent_id, departments.duty,
                 departments.contact, departments.region_id, departments.is_active,
                 departments.created_at, departments.updated_at, departments.deleted_at,
                 regions.name, parent_departments.name
        ORDER BY departments.parent_id ASC, departments.created_at ASC
    </select>
    
    <!-- 根据ID查询部门详情（包含父部门名称） -->
    <select id="selectDepartmentWithDetails" resultMap="DepartmentWithDetailsMap">
        SELECT departments.*,
               parent_departments.name as parent_name,
               regions.name as region_name
        FROM departments
        LEFT JOIN departments parent_departments ON departments.parent_id = parent_departments.id AND parent_departments.deleted_at IS NULL
        LEFT JOIN regions ON departments.region_id = regions.id
        WHERE departments.id = #{id} AND departments.deleted_at IS NULL
    </select>
    
    <!-- 获取子部门列表 -->
    <select id="selectChildDepartments" resultMap="DepartmentMap">
        SELECT * FROM departments
        WHERE parent_id = #{parentId} AND deleted_at IS NULL
        ORDER BY created_at ASC
    </select>
    
    <!-- 分页查询人员信息列表 -->
    <select id="selectPersonnelPage" resultMap="PersonnelMap">
        SELECT 
            p.*,
            d.name as department_name,
            pos.name as position_name,
            u.username as username
        FROM 
            personnel p
        LEFT JOIN 
            departments d ON p.department_id = d.id
        LEFT JOIN 
            positions pos ON p.position_id = pos.id
        LEFT JOIN 
            users u ON p.user_id = u.id
        WHERE 
            p.deleted_at IS NULL
            <if test="name != null and name != ''">
                AND p.full_name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="departmentId != null">
                AND p.department_id = #{departmentId}
            </if>
            <if test="positionId != null">
                AND p.position_id = #{positionId}
            </if>
        ORDER BY 
            <choose>
                <when test="sort != null and sort != ''">
                    ${sort}
                </when>
                <otherwise>
                    p.created_at DESC
                </otherwise>
            </choose>
        LIMIT #{offset}, #{limit}
    </select>
    
    <!-- 查询符合条件的人员记录总数 -->
    <select id="countPersonnel" resultType="int">
        SELECT 
            COUNT(1)
        FROM 
            personnel p
        WHERE 
            p.deleted_at IS NULL
            <if test="name != null and name != ''">
                AND p.full_name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="departmentId != null">
                AND p.department_id = #{departmentId}
            </if>
            <if test="positionId != null">
                AND p.position_id = #{positionId}
            </if>
    </select>
    
    <!-- 插入人员记录 -->
    <insert id="insertPersonnel" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO personnel (
            full_name, 
            phone, 
            email, 
            position_id, 
            department_id, 
            user_id, 
            employee_no, 
            hire_date, 
            work_responsibilities,
            created_at,
            updated_at
        ) VALUES (
            #{fullName},
            #{phone},
            #{email},
            #{positionId},
            #{departmentId},
            #{userId},
            #{employeeNo},
            #{hireDate},
            #{workResponsibilities},
            NOW(),
            NOW()
        )
    </insert>
    
    <!-- 更新人员记录 -->
    <update id="updatePersonnel">
        UPDATE personnel
        SET 
            <if test="fullName != null">full_name = #{fullName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="positionId != null">position_id = #{positionId},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="employeeNo != null">employee_no = #{employeeNo},</if>
            <if test="hireDate != null">hire_date = #{hireDate},</if>
            <if test="workResponsibilities != null">work_responsibilities = #{workResponsibilities},</if>
            updated_at = NOW()
        WHERE 
            id = #{id} AND deleted_at IS NULL
    </update>
    
    <!-- 根据ID查询人员信息 -->
    <select id="selectPersonnelById" resultMap="PersonnelMap">
        SELECT 
            p.*,
            d.name as department_name,
            pos.name as position_name,
            u.username as username
        FROM 
            personnel p
        LEFT JOIN 
            departments d ON p.department_id = d.id
        LEFT JOIN 
            positions pos ON p.position_id = pos.id
        LEFT JOIN 
            users u ON p.user_id = u.id
        WHERE 
            p.id = #{id} AND p.deleted_at IS NULL
    </select>

    <!-- 根据用户ID查询人员ID（用于绑定巡检记录inspector_id） -->
    <select id="selectPersonnelIdByUserId" resultType="long">
        SELECT id FROM personnel WHERE user_id = #{userId} AND deleted_at IS NULL LIMIT 1
    </select>
    
    <!-- 统计部门下的人员数量 -->
    <select id="countPersonnelByDepartmentId" resultType="int">
        SELECT 
            COUNT(1)
        FROM 
            personnel
        WHERE 
            department_id = #{departmentId} AND deleted_at IS NULL
    </select>
    
    <!-- 更新部门信息 -->
    <update id="updateDepartment">
        UPDATE departments
        SET 
            <if test="name != null">name = #{name},</if>
            parent_id = #{parentId},
            <if test="duty != null">duty = #{duty},</if>
            <if test="contact != null">contact = #{contact},</if>
            <if test="regionId != null">region_id = #{regionId},</if>
            <if test="isActive != null">is_active = #{isActive},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            updated_at = NOW()
        WHERE 
            id = #{id} AND deleted_at IS NULL
    </update>
</mapper> 