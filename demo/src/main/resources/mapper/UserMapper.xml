<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <!-- 根据用户ID查询用户权限列表 -->
    <select id="selectPermissionsByUserId" resultType="com.example.demo.pojo.entity.system.Permission">
        SELECT DISTINCT permissions.*
        FROM permissions
                 INNER JOIN role_permissions ON permissions.id = role_permissions.permission_id
                 INNER JOIN roles ON roles.id = role_permissions.role_id
                 INNER JOIN users ON users.role_id = roles.id
        WHERE users.id = #{userId}
          AND users.deleted_at IS NULL
          AND users.is_active = 1
          AND roles.deleted_at IS NULL
          AND permissions.deleted_at IS NULL
          AND role_permissions.deleted_at IS NULL
        ORDER BY permissions.sort_order, permissions.id
    </select>

    <!-- 根据用户名查询用户（简单查询） -->
    <select id="selectByUsername" resultType="com.example.demo.pojo.entity.system.User">
        SELECT *
        FROM users
        WHERE username = #{username}
          AND is_active = 1
          AND deleted_at IS NULL
    </select>


    <!-- 检查用户名是否已存在 -->
    <select id="countByUsername" resultType="int">
        SELECT COUNT(1)
        FROM users
        WHERE username = #{username}
          AND deleted_at IS NULL
    </select>

    <!-- 分页查询用户列表（包含关联信息） -->
    <select id="selectUserPageWithDetails" resultType="com.example.demo.pojo.entity.system.User">
        SELECT users.*,
        roles.name as role_name
        FROM users
        LEFT JOIN roles ON users.role_id = roles.id
        WHERE users.deleted_at IS NULL
        <if test="username != null and username != ''">
            AND users.username = #{username}
        </if>
        <if test="roleId != null">
            AND users.role_id = #{roleId}
        </if>
        <if test="isActive != null">
            AND users.is_active = #{isActive}
        </if>
        ORDER BY users.created_at DESC
    </select>

    <!-- 插入用户记录 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users(username, password, role_id, is_active, created_at, updated_at)
        VALUES (#{username}, #{password}, #{roleId}, #{isActive}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultType="com.example.demo.pojo.entity.system.User">
        SELECT *
        FROM users
        WHERE id = #{id}
          AND deleted_at IS NULL
    </select>

    <!-- 根据ID更新用户 -->
    <update id="updateById">
        UPDATE users
        SET username   = #{username},
            role_id    = #{roleId},
            is_active  = #{isActive},
            last_login = #{lastLogin},
            updated_at = #{updatedAt}
        WHERE id = #{id}
          AND deleted_at IS NULL
    </update>

    <!-- 根据用户ID查询用户的角色信息（单个角色） -->
    <select id="selectUserRole" resultType="com.example.demo.pojo.entity.system.Role">
        SELECT roles.*
        FROM roles
        INNER JOIN users ON users.role_id = roles.id
        WHERE users.id = #{userId}
          AND users.deleted_at IS NULL
          AND roles.deleted_at IS NULL
    </select>

    <!-- 根据用户ID查询角色名称 -->
    <select id="selectRoleNameByUserId" resultType="java.lang.String">
        SELECT roles.name
        FROM roles
        INNER JOIN users ON users.role_id = roles.id
        WHERE users.id = #{userId}
          AND users.deleted_at IS NULL
          AND roles.deleted_at IS NULL
    </select>

    <!-- 根据用户ID查询用户角色列表 -->
    <select id="selectRolesByUserId" resultType="com.example.demo.pojo.entity.system.Role">
        SELECT roles.*
        FROM roles
        INNER JOIN users ON users.role_id = roles.id
        WHERE users.id = #{userId}
          AND users.deleted_at IS NULL
          AND roles.deleted_at IS NULL
    </select>
</mapper>
